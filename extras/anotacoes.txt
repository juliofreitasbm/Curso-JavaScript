	MODULO A - AULA 01 - O QUE JAVASCRIPT É CAPAZ DE FAZER?

Cliente vs Servidor: o JavaScript foi criado para atuar no lado do Cliente, mas hoje também alcança o lado do servidor

HTML: conteúdo
CSS: estilo
JavaScript: interação

	MODULO A - AULA 02 - COMO NÓS CHEGAMOS AQUI?

ECMASCRIPT : Versão do JavaScript padronizada pela Associação Europeia de Fabricantes de Computadores (ECMA)

Motor interno dos navegadores que roda JavaScript:
	Google Chrome: V8
		Vantagem: gerava códigos JIT (Just in Time), Código aberto
	Firefox: Spidermonkey
	Safari: Nitro
	Opera: Carakan
	Microsoft Edge: chakra

Curso será focado no ES6 de 2015

Tecnologias
	jQuery: Não é framework, é um conjunto de bibliotecas, não é mais tão famoso atualmente, criado por uma galera da Mozilla
	Angular: de 2009, criado e mantido pelo Google, facilita criação de aplicações web, linguagem menos imperativa e mais declarativa (semelhante ao SQL para banco de dados). Existe uma treta entre o Angular JS e o Angular (versão 2 pra cima)
	React: do Facebook, mais ou menos a mesma funcionalidade do Angular, mas com flexibilidades maiores
	React Native: aplicações em celular
	Vue: de 2014, framework muito poderoso (estude depois), versão melhor do Angular
	Electron: mantido pela GitHub, criação de interfaces gráficas, usado no VSCode, slack e discord.
	IONIC: SDK (Software Development Kit) pra criar aplicações para dispositivos móveis, utiliza Node.js, utiliza Cordova

Gaming
	Phaser
	PixiJS
	Impact
	Melon.JS
	CraftyJS

	MODULO A - AULA 03 - COMEÇANDO

Para aprender:
	Assistir vídeo
	Praticar
	Ler conteúdo
	Fazer anotações
	Interagir com outras pessoas
	Comece a pensar em projetos próprios

Bibliografia
	JavaScript o guia definitivo (editora O"Relly")
	Guia do Programador (Não ta tão atualizado)
	Guia de referência da Mozilla:
	Guia de referência da ECMA:

OBS: Nem sempre é tão importante estudar a versão mais atualizada porque os navegadores levam tempo para implementá-las

	MODULO B - Aula 05 - VARIÁVEIS E TIPOS PRIMITIVOS 

Identificador de Variáveis
	Podem começar com letra, $ ou _
	Não podem começar com números
	É possível usar letras ou números
	É possível usar acentos e símbolos
	Não podem conter espaços
	Não podem ser palavras reservadas

Dicas de Variáveis
	Maiusculas e minísculas fazem diferença
	Tente escolher nomes coerentes para as Variáveis

Comando
	typeoff //retorna o tipo de uma variável - é um tipo de operador
	pode usar tanto "var" como "let" pra criar variáveis

Data Types
	number
		Infinity
		Nan
	string
	boolean
	null
	undefined
	object
	function

	MODULO B - Aula 06 - Tratamento de Dados

Comentário:
	HTML: <-- -->
	CSS: /*  */
	JavaScript: /*  */ ou //

String > Number
	Number.parseInt(n)
	Number.parseFloat(n)
	Number(n)

Number > String
	String(n)
	n.toString()

Formatando strings
	var s = 'JavaScript'
	'Eu estou aprendendo ' + s //concatenação
	`Eu estou aprendendo ${s}` //usa template string
	obs: ${s} é um placeholder

	n.length //quantos caracteres tem uma string
	n.toUpperCase() // deixar tudo maiúsculo
	n.toLowerCase() // deixar tudo minúsculo

	document.write(n) //para escrever

Formatando números
	n.toFixed(2) //aumenta o número de casas decimais para 2
	n.toFixex(2).repace('.', ',') //troca ponto por vírgula no número
	n.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'}) //muda o número para o padrão de real brasileiro
	n.toLocaleString('pt-BR', {style: 'currency', currency: 'USD'}) //muda o número para o padrão de dólar
	n.toLocaleString('pt-BR', {style: 'currency', currency: 'EUR'}) //muda o número para o padrão de euro

	MODULO B - AULA 07 E 08 - OPERADORES 

Principais Tipos:
	aritméticos
		soma: +
		subtração: -
		multiplicação: *
		divisão: /
		resto da divisão inteira: %
		potência: **
	atribuição
		recebe: =
	relacionais
		maior que: >
		menor que: <
		maior ou igual que: >=
		menor ou igual que: <=
		igual a: ==
		diferente de: !=
		igualdade restrita (é identico a): === //funciona igual a do C. Considera o tipo da variável

		Ex:
		5 == 5 //True
		5 == '5' //True
		5 === '5' //False
		5 === 5 //True
	lógicos
		negação: !
		conjunção(E lógico): &&
		disjunção(OU lógico): || 
	ternário
		TESTE ? True : False
		média >= 7 ? "Aprovado" : "Reprovado" 

Precedência dos OPERADORES Aritméticos
	()
	**
	*, /, %
	+, -

Precedência de todos os OPERADORES
	(), **, /, ...
	>, <, >=, ...
	!
	&&
	||

	MODULO C - AULA 09 - Introdução à DOM

DOM - Document Object Model (modelo de objetos para documentos)
	É um conjunto de objetos dentro do seu navegador que vai dar acesso aos componentes internos do seu website
	Ele não funciona dentro do node.JS. Ele está presente quando roda JavaScript dentro do navegador

Árvore DOM
	
				-location
											-meta
									-head
											-title
window 			-document	-html

									-body
											-h1
				-history					-p
											-p	-strong
											-div

Métodos de Acesso à DOM
	por Marca
		getElementsByTagName()	//pega mais de um elemento

	por ID
		getElementById()
	por Nome
		getElementsByName()
	por Classe
		getElementsByClassName()
	por Seletor
		querySelector()
		querySelectorAll()
		obs: usar # para ID e . para class

	MODULO C - AULA 10 - Eventos DOM

Eventos para Mouse
	mouseenter
	mousemove
	mousedown
	mouseup
	click
	mouseout

	mais eventos: 	https://developer.mozilla.org/pt-BR/docs/Web/Events
					https://developer.mozilla.org/en-US/docs/Web/Events

	MODULO D - AULA 11 e AULA 12- CONDICÕES

Tipos de Condições
	Condição simples: só o if
	Condição composta: if e else
	Condições aninhadas: condições dentro de condições
	Condições multiplas: serve para valores fixos (só números inteiros e caracteres) // switch()

Pegando a hora do sistema
	var agora = new Date()
	var hora = agora.getHours()

Dias da Semana em JavaScript
	var agora = new Date()
	var diaSem = agora.getDay()
	0 é Domingo
	1 é Segunda
	2 é Terça
	3 é Quarta
	4 é Quinta
	5 é Sexta
	6 é Sábado

	MODULO D - AULA DE EXERCÍCIO 1

Centralização
	Para section usar margin: auto;
	Para header e footer usar text-align: center;

	onload="function()" //onload é ao carregar
	onde pegar fotos gratuitas: https://www.pexels.com/pt-br

	MODULO D - AULA DE EXERCÍCIO 2

Mudando background do body
	document.body.style.background = '#cecece"

	MODULO D - AULA DE EXERCÍCIO 3

Criando tag imagem no JavaScript
	var img = document.createElement('img')

Colocando um id na tag imagem
	img.setAttribute('id', 'foto')

Colocando um "src" na imagem
	img.setAttribute('src', 'foto-bebe-f.png')

Colocando imagem dentro de uma div
	var res = document.querySelector('div#res')
	res.appendChild(img)

	MODULO E - LAÇOS DE REPETIÇÃO

Estrutura de Repetição com teste lógico no início
	while() {}

Estrutura de Repetição com teste lógico no funcionalidade
	do { } while()

Estrutura de Repetição com variável de controle
	Inicialização
	Teste lógico
	Incremento	
		//Executa primeiro a inicialização e o teste. Se o teste for verdadeiro executa o bloco e faz o incremento antes de fazer o próximo teste
	for() {}

	MODULO E - EXERCÍCIOS JAVASCRIPT

Emojis
	https://apps.timwhitlock.info/emoji/tables/unicode

Masoquê?
	Por algum motivo que só deus sabe botões do tipo "number" devolvem um input do tipo string então é necessário usar o Number(n.value) para um input "n" por exemplo

	MODULO F - AULA 15 - VARIÁVEIS COMPOSTAS

Variáveis
	Simples: só conseguem armazenar um valor por vez
	Compostas: devem ser capazes de armazenar vários valores em uma mesma estrutura

Array
	É composto por vários elementos. Cada elemento tem um valor e uma chave de identificação